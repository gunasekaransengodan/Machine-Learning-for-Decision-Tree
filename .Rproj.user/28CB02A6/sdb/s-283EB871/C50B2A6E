{
    "collab_server" : "",
    "contents" : "#Configure Working Diretory\n\nsetwd(\"<File Path>\") #OR Select Files Using Browse code\ngetwd()\n\n#Read CSV File data\n\nbH <- read.csv(\"<File Path:Loan processing Private company survey Data>\")\n\nstr(bH)\nsummary(bH)\n\n#import or Install Required Librarys\n\nlibrary(dplyr) #Data Manipulation \nlibrary(rpart) #Recursive partitioning of classification, regression and survival tree\nlibrary(irr) #Inter rater reliability Calculation\nlibrary(caret) #classification, regression\nlibrary(rattle) #GUI for mining\nlibrary(rpart.plot) #support to plot rpart trees\nlibrary(RColorBrewer) #helps to create colorful graphs using premade color palettes \n\n#Data Preparation & Exploration\n#Check Column names\n\nnames(bH) #110 Columns\n\n#Case study requires only cus_employername; Need to group Target var basis cus_employername \n\nbH_Group <- bH[, c(\"cus_employername\", \"TARGET\")] #Other way bH_Target <- select(bH, 9, 110)\n\n#Check Missed values \n\ncolSums(is.na(bH_Group)) #for TARGET Na is 6217, cus_employername Na is 0\nbH_Group$TARGET <- as.factor(bH_Group$TARGET)\n\n#Quick Check in Data Summary and Data Type\n\nstr(bH_Group) # Total : 29105\nsummary(bH_Group) #Unique : 26813\n\n#Other similar Variable Combination\n\nbH_Group1 <- bH[, c(\"cus_occupation\", \"TARGET\")]\nbH_Group1$TARGET <- as.factor(bH_Group1$TARGET)\nsummary(bH_Group1) #Unique : 18199\n\n#Delete missing values in TARGET Variable\n\nmissing_index <- which(is.na(bH_Group$TARGET))\nbH_Cleaned <- bH_Group[-missing_index,]\n\nstr(bH_Cleaned) #22888 Rows # unique :21088\nsummary(bH_Cleaned) # 0 NA's for Both Variables \n\n# Count of Rows in Missed value, Duplicate list has been Removed\n# Formula = # bH_MissedDuplicate = (TotalObservation of bH_Group - Unique bH_Group) -\n#                       (TotalObservation of bH_Cleaned - Unique bH_Cleaned)\n\n#bH_Missed Duplicate   = (29105 - 26813) - (22888 - 21088)\n#Result    : 492\n\n#Total Duplicate : 22888 - 21088 = 1800 - 6 = 1794\n\n#Decision Tree Modeling \n#Build Decision Tree\n\nbH_Model <- rpart(TARGET~cus_employername,data=bH_Cleaned,method=\"class\", \n                  control=rpart.control(cp=0.005,minsplit=2), parms = list(split=\"gini\"))\n\n#ploting the Tree\n\nfancyRpartPlot(bH_Model)\n\noptions(scipen = 999)\n\n#Rules Extraction\n\nasRules(bH_Model)\n\n#Result:\n#Rule number: 3 [TARGET=1 cover=8692 (38%) prob=0.88]\n#Rule number: 2 [TARGET=0 cover=14196 (62%) prob=0.19]\n\n#Node 2 Has Target Zero with probability 81% (100 - 19)\n#Node 3 Has Target One  with probability 88% \n\n#node Extraction\nbH_Model$node <- bH_Model$where\nhead(bH_Model$node, 50)\n\n#OR\nbH_Cleaned$EmployerGroup <- bH_Model$where\nView(bH_Cleaned$EmployerGroup)\n\n## Fullfill Business Expectation ##\n#code/procedure to create a dummy variable denoting which rows of the data correspond to \n#\"Group 1\" and which rows correspond to \"Group 2\"\n\n#Both Result has 2 for BAD and 3 for Good c(2L,3L)\n\n#Lets Separate each in one Group Group 1, Group 2\n\n#Group 1 - Consisting of all employer names where the bad rate is high\n#Group 2 -  Consisting of all the employer names where bad rate is low\n\nbH_Cleaned$EmployerGroup <- ifelse(bH_Cleaned$EmployerGroup == 2, \"Group 1\", \"Group 2\")\nhead(bH_Cleaned)\ntail(bH_Cleaned)\nView(bH_Cleaned) #shows who's bad rate High and Whos Bad Rate Low\n\n#Determine bad rate in each group\n\nbH_Cleaned$EmployerGroup <- as.factor(bH_Cleaned$EmployerGroup)\nstr(bH_Cleaned$EmployerGroup)\n\nsummary(bH_Cleaned$EmployerGroup)\n## Group 1 Group 2 \n## 14196    8692 \n\ntable(bH_Cleaned$EmployerGroup, bH_Cleaned$TARGET) / (nrow(bH_Cleaned)) * 100\n\n##                 0         1\n## Group 1 50.179133 11.844635\n## Group 2  4.674939 33.301293\n\n## With above Output, \n## Group 1 Consisting of all employer names where the bad rate is high., That is 50%\n## Group 2 Consisting of all the employer names where bad rate is low., That is 4.7%\n\n\n\n\n\n",
    "created" : 1501914843425.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1704562707",
    "id" : "C50B2A6E",
    "lastKnownWriteTime" : 1501914816,
    "last_content_update" : 1501914816,
    "path" : "E:/GitHub/Machine-Learning-for-Decision-Tree/Decision Tree.R",
    "project_path" : "Decision Tree.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}